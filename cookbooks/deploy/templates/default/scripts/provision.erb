require 'rake'
require '<%= node['deploy_scripts_dir'] %>/CI/BuildScripts/Helpers/configuration'
require '<%= node['deploy_scripts_dir'] %>/CI/BuildScripts/Helpers/io_utils'
require '<%= node['deploy_scripts_dir'] %>/CI/BuildScripts/Helpers/mongo'
require '<%= node['deploy_scripts_dir'] %>/CI/BuildScripts/Helpers/pim_publisher'


exe = '/Provision/bin/UltimateSoftware.Provisioning.Runner.exe'
config = "#{exe}.config"

if Dir.exist?('/Provision') && '<%= @force_provision %>' != 'true'
  puts 'Deployment has already been provisioned'
  exit
else
  puts 'Provisioning deployment'
end

FileUtils.remove_dir('/Provision', true)
FileUtils.mkdir_p('/Provision')

FileUtils.cp_r('<%= node['deploy_scripts_dir'] %>/Provision/.', '/Provision/bin')
FileUtils.cp_r('<%= node['deploy_scripts_dir'] %>/ProvisionData/.', '/Provision/bin')
FileUtils.cp_r('<%= node['deploy_scripts_dir'] %>/PayrollProvision', '/Provision')
FileUtils.cp_r('<%= node['deploy_scripts_dir'] %>/Models', '/Provision')
FileUtils.cp_r('<%= node['deploy_scripts_dir'] %>/Images', '/Provision')
FileUtils.cp_r('<%= node['deploy_scripts_dir'] %>/uiml', '/Provision')
FileUtils.cp_r('<%= node['deploy_scripts_dir'] %>/Workflow.Activities.Compass', '/Provision')

Helpers::change_app_setting(config, "ConnectionString", "Server=<%= @db_server %>:<%= @sarmus_port %>")
Helpers::change_app_setting(config, "EntityFramework.ModelFolder", "C:\\Provision\\Models\\")
Helpers::change_app_setting(config, "ImportFlowRoot", "C:\\Provision\\Workflow.Activities.Compass\\")

IOUtils::replace_text_in_file(config, '<\/hosts>', '</hosts><securityProperties mode="None" protectionLevel="None"/>')

Helpers::drop_all_databases("<%= @db_server %>", "<%= @sarmus_port %>")

Dir.chdir('/Provision/bin')

def import_data(exe, tenant, input_file, model)
  puts "running provisioning for model: #{model} tenant: #{tenant} input file: #{input_file}"
  success = system "#{exe} -model #{model} -tenant #{tenant} -data \"#{input_file}\""
  exit_code = $?
  puts "provisioning exit code: #{exit_code}"
  if success
    puts "provisioning #{File.basename(input_file)} successful"
  else
    raise "Error provisioning #{File.basename(input_file)}. Exit code: #{exit_code}"
  end
end

tenant = <%= @tenant %>

if tenant == 'VGC'
  import_data(exe, 'importer', 'c:\Provision\bin\Models.xlsx', 'ultipro2')
  import_data(exe, 'importer', 'c:\Provision\bin\VGC - SHARED.xlsx', 'ultipro2')
  import_data(exe, 'VGC', 'c:\Provision\bin\VGC - HCM.xlsx', 'ultipro2')
else
  import_data(exe, 'importer', 'c:\Provision\bin\Models.xlsx', 'HCM')
  import_data(exe, 'importer', 'c:\Provision\PayrollProvision\files\PayrollEngine.xlsx', 'HCM')

  paycheck_PIM = File.read('c:/Provision/PayrollProvision/entities/HCM.entity_json')
  Helpers::PIMPublisher.new.publish_entity('<%= @app_server %>', paycheck_PIM)

  import_data(exe, 'PENG', 'c:\Provision\PayrollProvision\files\Paycheck.xlsx', 'HCM')
  import_data(exe, 'PENG', 'c:\Provision\PayrollProvision\files\Rules.xlsx', 'HCM')
end
