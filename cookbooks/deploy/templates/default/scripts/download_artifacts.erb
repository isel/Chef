require 'fog'
require 'fileutils'

revision = '<%= @revision %>'
puts "pulling build scripts from revision: #{revision}"

storage = Fog::Storage.new(
  :provider => 'AWS',
  :aws_access_key_id => '<%= @aws_access_key_id %>',
  :aws_secret_access_key => '<%= @aws_secret_access_key %>'
)

bucket = storage.directories.find { |d| d.key == 'ugfartifacts' }
s3_files = bucket.files

install_files = '<%= @artifacts %>'.split(',')

deploy_folder = '<%= node['deploy_scripts_dir'] %>'
revision_marker_file = File.join(deploy_folder,"#{revision}.txt")

if Dir.exist? deploy_folder
   old_revision =  File.exists revision_marker_file ? File.read(revision_marker_file).chomp : nil
   if old_revision == revision
       puts "Found the revision #{revision} already on the system"
       exit 0
   else
       FileUtils.remove_dir(deploy_folder, true)
   end
end

Dir.mkdir(deploy_folder)
missing_files = []

install_files.each do |f|
    file = s3_files.get("GlobalIncite/#{revision}/#{f}.zip")
    if file.nil?
        missing_files << "GlobalIncite/#{revision}/#{f}.zip"
    else
        File.open("#{deploy_folder}/#{f}.zip", 'wb') do |local_file|
          local_file.write(file.body)
        end
        <% if node[:platform] == 'ubuntu' -%>
          `unzip -d #{deploy_folder}/#{f} #{deploy_folder}/#{f}.zip`
        <% else -%>
          `"#{ENV['ProgramFiles(x86)']}\\7-Zip\\7z.exe" x -y -o#{deploy_folder}/#{f} -r #{deploy_folder}/#{f}.zip`
        <% end -%>
    end
end

raise "could not find the following files: #{missing_files}" unless missing_files.empty?

File.open(revision_marker_file, 'w') { |file| file.puts(revision) }
