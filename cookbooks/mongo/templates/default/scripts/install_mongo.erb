require 'rake'
require 'mongo'
require 'yaml'
require 'fileutils'

require '<%= @binaries_directory %>/CI/BuildScripts/Cloud/deployment'
require '<%= @binaries_directory %>/CI/BuildScripts/Helpers/process'

install_directory = '<%= @install_directory %>'
config = "#{install_directory}/mongod.conf"

source_config = '<%= @source_config %>'
source_directory = '<%= @source_directory %>'

# Update the configuration
db_port = '<%= @db_port %>'
launch_wait_timeout = <%= @timeout %>
data_directory = 'data/db'
log_directory = 'log'
logfile = "#{log_directory}/mongo.log"

Dir.mkdir(install_directory) unless Dir.exists?(install_directory)
Dir.chdir(install_directory)

FileUtils.mkdir_p(log_directory)
FileUtils.mkdir_p(data_directory)

FileUtils.cp_r("#{source_directory}/mongo_windows/mongo/.", '.')

command = 'install'

# Copy the configuration file

FileUtils.copy_file((source_config, config)

# Install the MongoDB Service
result = `bin\\mongod.exe --config #{config} --#{command}  --rest`

service_display_name = '<%= @service_name %>'

# Start the service
result = `sc.exe start "#{service_display_name}"`

# Inspect the service status
Helpers::Process.new.run("wait for #{service_display_name} to start", launch_wait_timeout) do
  begin
    result = `sc.exe query "#{service_display_name}"`
    result.match Regexp.new('STATE\s+:\s+\d+\s+RUNNING', Regexp::IGNORECASE)
  rescue
    false
  end
end

Helpers::Process.new.run('wait for mongo shell to become available', launch_wait_timeout) do
  begin
    connection = Mongo::Connection.new('localhost', db_port, { :safe => true })
    db = connection.db('test')
    db.class.to_s.match(/Mongo::DB/)
  rescue
    false
  end
end