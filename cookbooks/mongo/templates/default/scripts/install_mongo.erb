require 'rake'
require 'mongo'
require 'yaml'
require 'fileutils'

require '<%= @binaries_directory %>/CI/BuildScripts/Cloud/deployment'
require '<%= @binaries_directory %>/CI/BuildScripts/Helpers/process'


install_directory = '<%= @install_directory %>'
target_directory = '<%= @target_directory %>'
db_port = '<%= @db_port %>'
launch_wait_timeout = <%= @timeout %>


Dir.mkdir(install_directory) unless Dir.exists?(install_directory)

Dir.chdir(install_directory)

data_directory = 'data/db'
log_directory = 'log'
logfile = "#{log_directory}/mongo.log"

FileUtils.mkdir_p(log_directory)
FileUtils.mkdir_p(data_directory)

FileUtils.cp_r("#{target_directory}/mongo_windows/mongo/.", '.')

command = 'install'
# command ='remove'


# update the configuration
config = "#{install_directory}/mongod.conf"

contents = ''
token = 'port=.+$'
File.open(config, 'r+') { |f| contents = f.read }

  matcher = Regexp.new('(\{' + token + '\})', Regexp::MULTILINE)
  while matcher.match(contents)
    contents=contents.gsub(matcher, "port=#{db_port}")
  end
File.open(config, 'w') { |f| f.puts contents }


# Install the MongoDB Service
result = `bin\\mongod.exe --config #{config} --#{command}  --rest`
$stderr.puts result
$stderr.puts File.read(logfile)

service_display_name = '<%= @service_name %>'

# Start the service
result = `sc.exe start "#{service_display_name}"`
$stderr.puts result

# Inspect the service status
Helpers::Process.new.run("wait for #{service_display_name} to start", launch_wait_timeout) do
  begin
    result = `sc.exe query "#{service_display_name}"`
    $stderr.puts result
    result.match Regexp.new('STATE\s+:\s+\d+\s+RUNNING', Regexp::IGNORECASE)  rescue
    false
  end
end

  Helpers::Process.new.run('wait for mongo shell to become available', launch_wait_timeout) do
    begin
      connection = Mongo::Connection.new('localhost', db_port, { :safe => true })
      db = connection.db('test')
      connection.exit()
      db.class.to_s.match( /Mongo::DB/)
    rescue
      false
    end
  end


